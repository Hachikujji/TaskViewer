<UserControl x:Class="TaskList.UI.Views.TaskManager"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:local="clr-namespace:TaskList.UI.ViewModels"
             xmlns:data="clr-namespace:TaskList.UI.Data"
             xmlns:models="clr-namespace:TaskList.Database.Models;assembly=TaskList.Database"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True, Type={x:Type data:TaskData}}"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="800"
             xmlns:prism="http://prismlibrary.com/" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             prism:ViewModelLocator.AutoWireViewModel="True" Background="#F7C9C5">
    <UserControl.Resources>
        <ResourceDictionary>
            <!-- Place for converters etc.. -->
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MaterialDesignThemes.Wpf;component/Themes/MaterialDesignTheme.Defaults.xaml" />
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid Background="LightPink">
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Disabled">
            <ScrollViewer.Template>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <ScrollContentPresenter Grid.Column="1"/>
                        <ScrollBar Name="PART_VerticalScrollBar" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Background="LightPink"/>
                    </Grid>
                </ControlTemplate>
            </ScrollViewer.Template>
            <TabControl ItemsSource="{Binding MainTasks}" TabStripPlacement="Left" Background="#EFF1DB" SelectedIndex="{Binding SelectedTabIndex}" >
                <TabControl.Resources>
                    <Style TargetType="TabItem">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="TabItem">
                                    <Grid Name="Panel" MinWidth="250">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ResetTabIndexEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                                <i:InvokeCommandAction Command="{Binding DataContext.ShowTabEditEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave">
                                                <i:InvokeCommandAction Command="{Binding DataContext.HideTabEditEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center" ContentSource="Header" Margin="10,2"/>
                                    </Grid>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter TargetName="Panel" Property="Background" Value="#FFD4DB" />
                                        </Trigger>
                                        <Trigger Property="IsSelected" Value="False">
                                            <Setter TargetName="Panel" Property="Background" Value="#F7C9C5" />
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </TabControl.Resources>

                <TabControl.ItemTemplate >
                    <DataTemplate >
                        <Grid>
                            <TextBlock Text="{Binding Name,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" FontSize="20" Width="auto" Height="auto" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                            <TextBox Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" FontSize="20" Margin="1 0 0 0" Width="auto" Height="auto" VerticalAlignment="Center" HorizontalAlignment="Center" Visibility="{Binding DataContext.IsTabEditVisibleEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                        </Grid>
                    </DataTemplate>
                </TabControl.ItemTemplate>
                <TabControl.ContentTemplate>
                    <DataTemplate>
                        <ListView ItemsSource="{Binding SubTasks}" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" SelectedIndex="{Binding DataContext.SelectedItemIndex, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Grid HorizontalAlignment="Stretch" Width="auto" Height="40">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding DataContext.ShowItemEditEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="MouseLeave">
                                                <i:InvokeCommandAction Command="{Binding DataContext.HideItemEditEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </Grid.ColumnDefinitions>
 
                                        <Button Grid.Column="0" Width="auto" Height="auto" Style="{DynamicResource MaterialDesignFlatAccentButton}" Command="">
                                            <materialDesign:PackIcon Kind="CircleOutline" Foreground="black"/>
                                        </Button>
                                        <Grid Grid.Column="1">
                                            <TextBlock Text="{Binding Name,Mode=OneWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" FontSize="15" VerticalAlignment="Center"  Width="auto"/>
                                            <TextBox Text="{Binding Name,Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch" FontSize="15" Margin="-1 0 0 0" VerticalAlignment="Center"  Width="auto" Visibility="{Binding DataContext.IsItemEditVisibleEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"/>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </DataTemplate>
                </TabControl.ContentTemplate>
            </TabControl>
        </ScrollViewer>
        <!-- UI BUTTONS -->
        <Grid Width="auto" Height="auto" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0 0 60 60">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Width="Auto">
                <!-- Delete button -->
                <Button Name="DeleteButton" FontSize="40" Height="70" Width="70" Background="Transparent" VerticalAlignment="Bottom" Command="{Binding DeleteItemButtonEvent}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Ellipse Name="Panel" Fill="#D76060" Width="auto" Height="auto" ></Ellipse>
                                            <materialDesign:PackIcon Kind="TrashCan" Width="30" Height="30" Foreground="black" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Panel" Property="Fill" Value="#A71010" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Name="MainTaskAddButton" Content="Add new Task" Grid.Row="0" Margin="0 0 0 5" Command="{Binding AddMainTaskButtonEvent}" Visibility="{Binding IsAddTaskButtonsVisibleEvent}"/>
                <Button Name="SubTaskAddButton" Content="Add new SubTask" Grid.Row="1" Margin="0 0 0 5" Command="{Binding AddSubTaskButtonEvent}" Visibility="{Binding IsAddTaskButtonsVisibleEvent}"/>
                <Button Name="AddButton" FontSize="40" Height="70" Width="70" Background="Transparent" Grid.Row="2" Command="{Binding ShowAddButtonsEvent}">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Grid>
                                            <Ellipse Name="Panel" Fill="#FFB4BB" Width="auto" Height="auto" ></Ellipse>
                                            <materialDesign:PackIcon Kind="Plus" Width="30" Height="30" Foreground="black" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Panel" Property="Fill" Value="#F98888" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </Grid>
    
</UserControl>
