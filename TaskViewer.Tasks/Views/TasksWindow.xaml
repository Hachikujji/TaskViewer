<UserControl
    x:Class="TaskViewer.Tasks.Views.TasksWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="clr-namespace:TaskViewer.Tasks.TestData"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:ln="clr-namespace:TaskViewer.Tasks.Resources"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:prism="http://prismlibrary.com/" xmlns:services="clr-namespace:TaskViewer.Tasks.Behaviors"
    x:Name="Window"
    MinWidth="700"
    MinHeight="700"
    d:DataContext="{d:DesignInstance IsDesignTimeCreatable=True,
                                     Type={x:Type data:TestViewData}}"
    d:DesignHeight="500"
    d:DesignWidth="800"
    prism:ViewModelLocator.AutoWireViewModel="True"
    Background="{DynamicResource MaterialDesignPaper}"
    FontFamily="{materialDesign:MaterialDesignFont}"
    TextElement.FontSize="16"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    mc:Ignorable="d">
    <UserControl.Resources>
        <ObjectDataProvider
            x:Key="Resources"
            MethodName="GetResourceInstance"
            ObjectType="{x:Type ln:CultureResources}" />
        <CollectionViewSource x:Key="TabList" Source="{Binding TabControlTabs}" />
    </UserControl.Resources>
    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="LightCyan">
        <!--  Authorization and Tasks tabs  -->
        <TabControl
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            SelectedIndex="{Binding HeaderSelectedTabIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
            Style="{DynamicResource MaterialDesignNavigatilRailTabControl}"
            TabStripPlacement="Top">
            <!--  Authorization  -->
            <TabItem
                Background="#ffc107"
                Header="{Binding Path=Authorization, Source={StaticResource Resources}}"
                Visibility="Collapsed">
                <Grid>
                    <StackPanel
                        Width="auto"
                        Height="200"
                        MinWidth="400"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="300" />
                                </Grid.ColumnDefinitions>
                                <Label
                                    Grid.Column="0"
                                    Height="30"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="right"
                                    Content="{Binding Path=Username, Source={StaticResource Resources}}" />
                                <TextBox Grid.Column="1" Text="{Binding Username, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            </Grid>
                            <Grid Grid.Row="1">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="300" />
                                </Grid.ColumnDefinitions>
                                <Label
                                    Grid.Column="0"
                                    Height="30"
                                    Margin="0,0,10,0"
                                    HorizontalAlignment="right"
                                    Content="{Binding Path=Password, Source={StaticResource Resources}}" />
                                <PasswordBox
                                    Name="Passwordbox"
                                    Grid.Column="1"
                                    MaxLength="64"
                                    PasswordChar="*">
                                    <i:Interaction.Behaviors>
                                        <services:PasswordBehavior Password="{Binding Password, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                    </i:Interaction.Behaviors>
                                </PasswordBox>
                            </Grid>
                            <Grid Grid.Row="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition />
                                </Grid.ColumnDefinitions>
                                <Button
                                    Grid.Column="0"
                                    Margin="0,5,20,0"
                                    Command="{Binding LogInButtonEvent}"
                                    CommandParameter="{Binding ElementName=Passwordbox}"
                                    Content="{Binding Path=Login, Source={StaticResource Resources}}"
                                    Style="{DynamicResource MaterialDesignFlatMidBgButton}" />
                                <Button
                                    Grid.Column="1"
                                    Margin="20,5,0,0"
                                    Command="{Binding RegistrationButtonEvent}"
                                    CommandParameter="{Binding ElementName=Passwordbox}"
                                    Content="{Binding Path=Registration, Source={StaticResource Resources}}"
                                    Style="{DynamicResource MaterialDesignFlatMidBgButton}" />
                            </Grid>
                            <TextBlock
                                Grid.Row="3"
                                HorizontalAlignment="Center"
                                Foreground="Red"
                                Text="{Binding AuthorizationErrorLog, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                                Visibility="{Binding AuthorizationErrorLogVisibility, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                    </StackPanel>
                    <!--  language change comboBox  -->
                    <ComboBox
                        Width="120"
                        Height="26"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top"
                        ItemsSource="{Binding Languages}"
                        SelectedIndex="1"
                        SelectedItem="{Binding SelectedLanguage}"
                        Style="{DynamicResource MaterialDesignComboBox}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectionChanged">
                                <i:InvokeCommandAction Command="{Binding LanguageChangedEvent}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Key}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </Grid>
            </TabItem>
            <!--  Tasks tab  -->
            <TabItem
                Background="#ffc107"
                Header="{Binding Path=Tasks, Source={StaticResource Resources}}"
                Visibility="Collapsed">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="auto" />
                        </Grid.RowDefinitions>
                        <TabControl
                            Grid.Row="0"
                            Height="auto"
                            ItemsSource="{Binding DataContext.TabControlTabs, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                            SelectedIndex="{Binding DataContext.SelectedTabItemIndex, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                            SelectedItem="{Binding DataContext.SelectedTabItem, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                            TabStripPlacement="Left"
                            Tag="{Binding ElementName=Window}">
                            <TabControl.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="auto" />
                                        </Grid.ColumnDefinitions>
                                        <!--  TabItem text  -->
                                        <Grid Grid.Column="0">
                                            <TextBlock
                                                MinWidth="90"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Center"
                                                Text="{Binding Task.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                                        </Grid>
                                        <!--  Close button  -->
                                        <Grid Grid.Column="1">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseLeftButtonUp">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.DeleteTaskTabEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <materialDesign:PackIcon
                                                Width="20"
                                                Height="20"
                                                Margin="5,0,0,0"
                                                HorizontalAlignment="Right"
                                                VerticalAlignment="Center"
                                                Kind="Close" />
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </TabControl.ItemTemplate>
                            <!--  Context menu  -->
                            <TabControl.ContextMenu>
                                <ContextMenu>
                                    <MenuItem
                                        Command="{Binding PlacementTarget.Tag.DataContext.DeleteTaskTabEvent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding DataContext}"
                                        Header="{Binding Path=Delete, Source={StaticResource Resources}}" />
                                </ContextMenu>
                            </TabControl.ContextMenu>
                            <TabControl.ContentTemplate>
                                <ItemContainerTemplate>
                                    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                        <DataGrid
                                            AutoGenerateColumns="False"
                                            CanUserDeleteRows="False"
                                            ItemsSource="{Binding SubTasks}"
                                            SelectedIndex="{Binding DataContext.SelectedListItemIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            SelectedItem="{Binding DataContext.SelectedListItem, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                            Tag="{Binding ElementName=Window}">
                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="RowEditEnding">
                                                    <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskAfterEditingEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                            <DataGrid.Columns>
                                                <!--  Task  -->
                                                <DataGridTextColumn
                                                    MinWidth="100"
                                                    Binding="{Binding Task.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                    Header="{Binding Path=Task, Source={StaticResource Resources}}">
                                                    <DataGridTextColumn.ElementStyle>
                                                        <Style TargetType="TextBlock">
                                                            <Setter Property="VerticalAlignment" Value="Center" />
                                                        </Style>
                                                    </DataGridTextColumn.ElementStyle>
                                                </DataGridTextColumn>
                                                <!--  Creation Date  -->
                                                <DataGridTemplateColumn>
                                                    <DataGridTemplateColumn.Header>
                                                        <TextBlock Text="{Binding Path=CreationDate, Source={StaticResource Resources}}" />
                                                    </DataGridTemplateColumn.Header>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <DatePicker
                                                                    xml:lang="en-US"
                                                                    SelectedDateFormat="Short"
                                                                    Text="{Binding Task.CreationDate, StringFormat='dd MMM yy', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="SelectedDateChanged">
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskAfterEditingEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </DatePicker>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <!--  Expiration Date  -->
                                                <DataGridTemplateColumn>
                                                    <DataGridTemplateColumn.Header>
                                                        <TextBlock Text="{Binding Path=ExpirationDate, Source={StaticResource Resources}}" />
                                                    </DataGridTemplateColumn.Header>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <DatePicker
                                                                    xml:lang="en-US"
                                                                    SelectedDateFormat="Short"
                                                                    Text="{Binding Task.ExpirationDate, StringFormat='dd MMM yy', Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="SelectedDateChanged">
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskAfterEditingEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                </DatePicker>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                                <!--  Status  -->
                                                <DataGridTemplateColumn>
                                                    <DataGridTemplateColumn.Header>
                                                        <TextBlock Text="{Binding Path=Status, Source={StaticResource Resources}}" />
                                                    </DataGridTemplateColumn.Header>
                                                    <DataGridTemplateColumn.CellTemplate>
                                                        <DataTemplate>
                                                            <Grid>
                                                                <ComboBox
                                                                    Name="StatusComboBox"
                                                                    Height="26"
                                                                    ItemsSource="{Binding DataContext.Statuses, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                                                    SelectedIndex="{Binding Task.Status, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                                                    Style="{DynamicResource MaterialDesignComboBox}">
                                                                    <i:Interaction.Triggers>
                                                                        <i:EventTrigger EventName="SelectionChanged">
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.UpdateTaskStatusEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                                                                        </i:EventTrigger>
                                                                        <i:EventTrigger EventName="DropDownOpened">
                                                                            <i:InvokeCommandAction Command="{Binding DataContext.SaveNotChangedTaskStatusEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" CommandParameter="{Binding DataContext, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type DataGridCell}}}" />
                                                                        </i:EventTrigger>
                                                                    </i:Interaction.Triggers>
                                                                    <ComboBox.ItemTemplate>
                                                                        <DataTemplate>
                                                                            <TextBlock Text="{Binding Key}" />
                                                                        </DataTemplate>
                                                                    </ComboBox.ItemTemplate>
                                                                </ComboBox>
                                                            </Grid>
                                                        </DataTemplate>
                                                    </DataGridTemplateColumn.CellTemplate>
                                                </DataGridTemplateColumn>
                                            </DataGrid.Columns>
                                            <DataGrid.ContextMenu>
                                                <ContextMenu>
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.DataContext.OpenSubTaskTabEvent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding Path=OpenSubTaskTab, Source={StaticResource Resources}}" />
                                                    <MenuItem Command="{Binding PlacementTarget.Tag.DataContext.DeleteTaskEvent, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}" Header="{Binding Path=Delete, Source={StaticResource Resources}}" />
                                                </ContextMenu>
                                            </DataGrid.ContextMenu>
                                        </DataGrid>
                                    </Grid>
                                </ItemContainerTemplate>
                            </TabControl.ContentTemplate>
                        </TabControl>
                        <Grid Grid.Row="1">
                            <StackPanel>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>
                                    <TextBlock
                                        Grid.Column="0"
                                        Width="auto"
                                        Margin="20,0,10,0"
                                        HorizontalAlignment="Right"
                                        Text="{Binding Path=Task, Source={StaticResource Resources}}" />
                                    <TextBox
                                        Grid.Column="1"
                                        Width="100"
                                        Text="{Binding DataContext.AddTaskName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                    <Button
                                        Grid.Column="3"
                                        Width="100"
                                        HorizontalAlignment="Right"
                                        Command="{Binding DataContext.AddTaskEvent, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"
                                        Content="{Binding Path=AddTask, Source={StaticResource Resources}}"
                                        Style="{DynamicResource MaterialDesignFlatAccentBgButton}" />
                                </Grid>
                            </StackPanel>
                        </Grid>
                    </Grid>
                    <Grid Grid.Column="1" Width="auto">
                        <materialDesign:ColorZone Padding="5">
                            <DockPanel>
                                <StackPanel Orientation="Horizontal">
                                    <Grid Height="33">
                                        <TextBlock
                                            Padding="5"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Text="{Binding DataContext.Username, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}" />
                                    </Grid>
                                    <Grid Background="Transparent">
                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="MouseLeftButtonDown">
                                                <i:InvokeCommandAction Command="{Binding LogOutEvent}" CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                        <Grid.ToolTip>Logout</Grid.ToolTip>
                                        <materialDesign:PackIcon
                                            Width="30"
                                            Height="30"
                                            Kind="Logout" />
                                    </Grid>
                                </StackPanel>
                            </DockPanel>
                        </materialDesign:ColorZone>
                    </Grid>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</UserControl>